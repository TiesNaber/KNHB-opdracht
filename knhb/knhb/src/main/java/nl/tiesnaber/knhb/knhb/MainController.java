package nl.tiesnaber.knhb.knhb;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@Controller // This means that this class is a Controller
@CrossOrigin(origins = "*")
public class MainController {
    @Autowired // This means to get the bean called PersoonRepo
    // Which is auto-generated by Spring, we will use it to handle the data
    private PersoonRepo persoonRepo;

    @Autowired
    private SpelerRepo spelerRepo; // Get spelerRepo Bean;

    @PostMapping(path="/personen/addPersoon") // Map ONLY POST Requests
    public @ResponseBody String addNewPersoon (@RequestParam String name, @RequestParam String geboorteDatum,
                                               @RequestParam String adres, @RequestParam String postcode, @RequestParam String plaats
                                               , @RequestParam String email) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Persoon p = new Persoon(name, geboorteDatum,adres,postcode,plaats,email);
        persoonRepo.save(p);
        return "Created and saved new Persoon object";
    }

    @PostMapping(path="/spelers/addSpeler")
    public @ResponseBody String addNewSpeler(@RequestParam String name, @RequestParam String geboorteDatum,
                                             @RequestParam String adres, @RequestParam String postcode, @RequestParam String plaats
                                            ,@RequestParam String email){

        Speler sp = new Speler(name, geboorteDatum, adres,postcode,plaats,email,true);
        spelerRepo.save(sp);

        return "Created and saved new Speler object";
    }

    @GetMapping(path="/spelers/getAll")
    public @ResponseBody Iterable<Speler> getAllSpelers(){
        return spelerRepo.findAll();
    }

    @GetMapping(path="/personen/getAll")
    public @ResponseBody Iterable<Persoon> getAllUsers() {
        // This returns a JSON or XML with the users
        return persoonRepo.findAll();
    }

    @DeleteMapping(path="/clearTable")
    public @ResponseBody String clearTable(){

        persoonRepo.deleteAll();
        return "Table Cleared";
    }


}